(function Q(B,n){if(typeof exports==="object"&&typeof module==="object")module.exports=n();else if(typeof define==="function"&&define.amd)define("grapha",[],n);else if(typeof exports==="object")exports["grapha"]=n();else B["grapha"]=n()})(this,function(){return function(Q){var B={};function n(e){if(B[e]){return B[e].exports}var U=B[e]={i:e,l:false,exports:{}};Q[e].call(U.exports,U,U.exports,n);U.l=true;return U.exports}n.m=Q;n.c=B;n.d=function(Q,B,e){if(!n.o(Q,B)){Object.defineProperty(Q,B,{configurable:false,enumerable:true,get:e})}};n.n=function(Q){var B=Q&&Q.__esModule?function B(){return Q["default"]}:function B(){return Q};n.d(B,"a",B);return B};n.o=function(Q,B){return Object.prototype.hasOwnProperty.call(Q,B)};n.p="";return n(n.s=0)}([function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.Graph = undefined;\n\nvar _grapha = __webpack_require__(1);\n\nvar _grapha2 = _interopRequireDefault(_grapha);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Graph = _grapha2.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanM/OTU1MiJdLCJuYW1lcyI6WyJHcmFwaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7UUFDU0EsSyIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdyYXBoIGZyb20gJy4vZ3JhcGhhLmpzJztcbmV4cG9ydCB7IEdyYXBoIH07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvaW5kZXguanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Graph = function () {\n  function Graph(config) {\n    var _this = this;\n\n    _classCallCheck(this, Graph);\n\n    this._config = config || {};\n    var defaultConf = {\n      isWeighted: false,\n      isDirected: true\n    };\n    Object.keys(defaultConf).forEach(function (k) {\n      _this._config[k] = _this._config[k] || defaultConf[k];\n    });\n    this._nodes = {};\n    this._nodeSize = 0;\n    this._edgeSize = 0;\n  }\n\n  // Creates and returns a new graph given the json object\n\n\n  _createClass(Graph, [{\n    key: 'deserialize',\n    value: function deserialize() {\n      var _this2 = this;\n\n      var json = {};\n      json.nodes = [];\n      json.links = [];\n      Object.keys(this._nodes).forEach(function (n) {\n        Object.keys(_this2._nodes[n].out).forEach(function (l) {\n          json.links.push({ \"source\": n, \"target\": l });\n        });\n        json.nodes.push({ \"id\": n });\n      });\n      return json;\n    }\n  }, {\n    key: 'hasNode',\n    value: function hasNode(node) {\n      if (node in this._nodes) return true;\n      return false;\n    }\n\n    // Adds a node to the Graph if it is not already in it\n\n  }, {\n    key: 'addNode',\n    value: function addNode(node) {\n      if (!this.hasNode(node)) this._nodeSize++;\n      this._nodes[node] = this.nodeOrEmpty(node);\n    }\n\n    // Returns an array of all nodes\n\n  }, {\n    key: 'getNodes',\n    value: function getNodes() {\n      return Object.keys(this._nodes);\n    }\n\n    // Returns an array of all nodes that have an edge from node.\n\n  }, {\n    key: 'nodesConnectedTo',\n    value: function nodesConnectedTo(node) {\n      if (!this.hasNode(node)) return;\n      return Object.keys(this._nodes[node].out);\n    }\n  }, {\n    key: 'nodesConnectedFrom',\n    value: function nodesConnectedFrom(node) {\n      if (!this.hasNode(node)) return;\n      return Object.keys(this._nodes[node].in);\n    }\n\n    // Removes the node from the graph if it exists\n    // Will also remove all edges connected to the node\n\n  }, {\n    key: 'removeNode',\n    value: function removeNode(node) {\n      var _this3 = this;\n\n      if (!(node in this._nodes)) return;\n      this.nodesConnectedFrom(node).forEach(function (u) {\n        _this3.removeEdge(u, node);\n      });\n      this.nodesConnectedTo(node).forEach(function (v) {\n        _this3.removeEdge(node, v);\n      });\n    }\n\n    // Adds an edge between node u and v\n    // If the graph is directed, then the edge will go from node u to node v\n    // If the graph is undirected, the edge will both go from u and v to v and u\n    // If the graph is weighted, the weight of the edge will be updated if the edge already exists\n    // Throws error if either u or v is not a node\n\n  }, {\n    key: 'addEdge',\n    value: function addEdge(u, v) {\n      var weight = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n      if (!(u in this._nodes && v in this._nodes)) throw new Error(\"Can't add edge when one or more nodes don't exist\");\n      if (!this._config.isWeighted) weight = 1;\n      if (!this.hasEdge(u, v)) this._edgeSize++;\n      if (this.isDirected) {\n        this._nodes[u].out[v] = weight;\n        this._nodes[v].in[u] = weight;\n      } else {\n        this._nodes[u].out[v] = weight;\n        this._nodes[v].in[u] = weight;\n        this._nodes[v].out[u] = weight;\n        this._nodes[u].in[v] = weight;\n      }\n    }\n\n    // Returns whether or not an edge exists between node u and v\n\n  }, {\n    key: 'hasEdge',\n    value: function hasEdge(u, v) {\n      if (!(u in this._nodes && v in this._nodes)) return false;\n      if (v in this._nodes[u].out && u in this._nodes[v].in) return true;\n      return false;\n    }\n\n    // Returns the weight of the edge between node u and v if it exists\n    // and false if it doesn't exist\n\n  }, {\n    key: 'getWeight',\n    value: function getWeight(u, v) {\n      if (this.hasEdge(u, v)) {\n        return this._nodes[u].out[v];\n      }\n      return false;\n    }\n\n    // Removes an edge if it exists\n\n  }, {\n    key: 'removeEdge',\n    value: function removeEdge(u, v) {\n      if (this.hasEdge(u, v)) {\n        if (this.isDirected) {\n          delete this._nodes[u].out[v];\n          delete this._nodes[v].in[u];\n        } else {\n          delete this._nodes[u].out[v];\n          delete this._nodes[v].in[u];\n          delete this._nodes[v].out[u];\n          delete this._nodes[u].in[v];\n        }\n        return true;\n      }\n      return false;\n    }\n\n    // Depth first search\n    // Returns a list of reachable nodes and the discovery node\n\n  }, {\n    key: 'DFS',\n    value: function DFS(u) {\n      var _this4 = this;\n\n      if (!this.hasNode(u)) return {};\n      var discovery = {};\n      var visited = {};\n      var dfs = function dfs(o, v) {\n        if (!_this4.hasNode(v)) return;\n        if (v in visited) return;\n        visited[v] = true;\n        discovery[v] = o;\n        Object.keys(_this4._nodes[v].out).forEach(function (e) {\n          dfs(v, e);\n        });\n      };\n      Object.keys(this._nodes[u].out).forEach(function (e) {\n        dfs(u, e);\n      });\n      return discovery;\n    }\n\n    // returns the node object if it exists or a new one\n\n  }, {\n    key: 'nodeOrEmpty',\n    value: function nodeOrEmpty(node) {\n      return node in this._nodes ? this._nodes[node] : { in: {}, out: {} };\n    }\n\n    // returns a count of nodes in the graph\n\n  }, {\n    key: 'nodeSize',\n    get: function get() {\n      return this._nodeSize;\n    }\n\n    // returns a count of edges\n    // If the graph is undirected each edge will only be counted once\n\n  }, {\n    key: 'edgeSize',\n    get: function get() {\n      return this._edgeSize;\n    }\n\n    // returns an object containing all nodes in the graph\n\n  }, {\n    key: 'nodes',\n    get: function get() {\n      return this._nodes;\n    }\n\n    // returns whether the graph is directed or not\n\n  }, {\n    key: 'isDirected',\n    get: function get() {\n      return this._config.isDirected;\n    }\n\n    // returns whether the edges are weighted or not\n\n  }, {\n    key: 'isWeighted',\n    get: function get() {\n      return this._config.isWeighted;\n    }\n  }], [{\n    key: 'serialize',\n    value: function serialize(json) {\n      var graph = new Graph();\n      json['nodes'].forEach(function (n) {\n        graph.addNode(n.id);\n      });\n      json['links'].forEach(function (l) {\n        graph.addEdge(l.source, l.target);\n      });\n      return graph;\n    }\n  }]);\n\n  return Graph;\n}();\n\nexports.default = Graph;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")}])});